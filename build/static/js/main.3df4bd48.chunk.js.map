{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/MovieControls.js","components/MovieCard.js","components/WatchList.js","components/Watched.js","components/ResultCard.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","state","action","type","watchlist","payload","filter","movie","id","watched","initialState","localStorage","getItem","JSON","parse","GlobalContext","createContext","GlobalProvider","props","useReducer","AppReducer","dispatch","useEffect","setItem","stringify","Provider","value","addMovieToWatchlist","removeMovieFromWatchlist","addMovieToWatched","moveToWatchlist","removeFromWatched","children","MovieControls","useContext","onClick","class","MovieCard","poster_path","src","alt","title","WatchList","length","map","Watched","ResultCard","storedMovie","find","o","storedMovieWatched","watchlistDisabled","watchedDisabled","format","release_date","overview","disabled","Home","useState","query","setQuery","results","setResults","onChange","e","preventDefault","target","fetch","process","then","res","json","data","errors","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3df4bd48.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Header = () => {\n  return (\n    <header>\n      <div className=\"container\">\n        <div className=\"inner-content\">\n          <div className=\"brand\">\n            <Link to=\"/\">Home</Link>\n          </div>\n\n          <ul className=\"nav-links\">\n            <li>\n              <Link to=\"/watch-list\">Watch List</Link>\n            </li>\n\n            <li>\n              <Link to=\"/favorites\">Favorites</Link>\n            </li>\n\n          </ul>\n        </div>\n      </div>\n    </header>\n  );\n};","export default (state, action) => {\n\n    // use this for Global State\n    // watchlist: [array of watchlist]\n    // watched: [array of watched]\n    // CRUD on those two\n    switch (action.type) {\n        case \"ADD_MOVIE_TO_WATCHLIST\":\n            return {\n                ...state,\n                watchlist: [action.payload, ...state.watchlist],  // new, then old\n            };\n        case \"REMOVE_MOVIE_FROM_WATCHLIST\":\n            return {\n                ...state,\n                watchlist: state.watchlist.filter(\n                    (movie) => movie.id !== action.payload\n                ),\n            };\n        case \"ADD_MOVIE_TO_WATCHED\":\n            return {\n                ...state,\n                watchlist: state.watchlist.filter(\n                    (movie) => movie.id !== action.payload.id\n                ),\n                watched: [action.payload, ...state.watched],\n            };\n        case \"MOVE_TO_WATCHLIST\":\n            return {\n                ...state,\n                watched: state.watched.filter(\n                    (movie) => movie.id !== action.payload.id\n                ),\n                watchlist: [action.payload, ...state.watchlist],\n            };\n        case \"REMOVE_FROM_WATCHED\":\n            return {\n                ...state,\n                watched: state.watched.filter((movie) => movie.id !== action.payload),\n            };\n        default:\n            return state;\n    }\n};","import React, { createContext, useReducer, useEffect } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\n// local storage\n// the inital state\nconst initialState = {\n    // get watchlist items : empty array\n    watchlist: localStorage.getItem(\"watchlist\")\n        ? JSON.parse(localStorage.getItem(\"watchlist\"))\n        : [],\n\n    // get watched itmes : empty array\n    watched: localStorage.getItem(\"watched\")\n        ? JSON.parse(localStorage.getItem(\"watched\"))\n        : [],\n};\n\n// Global Context = watchlist & watched\nexport const GlobalContext = createContext(initialState);\n\n//reducer\nexport const GlobalProvider = (props) => {\n    // state, dispatch changes state\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    // every time state changes, perform updates\n    useEffect(() => {\n        localStorage.setItem(\"watchlist\", JSON.stringify(state.watchlist));\n        localStorage.setItem(\"watched\", JSON.stringify(state.watched));\n    }, [state]);\n\n    // different actions\n    // state changes\n    // parameters are given from the client side\n    const addMovieToWatchlist = (movie) => {\n        dispatch({ type: \"ADD_MOVIE_TO_WATCHLIST\", payload: movie });\n    };\n\n    const removeMovieFromWatchlist = (id) => {\n        dispatch({ type: \"REMOVE_MOVIE_FROM_WATCHLIST\", payload: id });\n    };\n\n    const addMovieToWatched = (movie) => {\n        dispatch({ type: \"ADD_MOVIE_TO_WATCHED\", payload: movie });\n    };\n\n    const moveToWatchlist = (movie) => {\n        dispatch({ type: \"MOVE_TO_WATCHLIST\", payload: movie });\n    };\n\n    const removeFromWatched = (id) => {\n        dispatch({ type: \"REMOVE_FROM_WATCHED\", payload: id });\n    };\n\n    return (\n        <GlobalContext.Provider\n            value={{\n                watchlist: state.watchlist,\n                watched: state.watched,\n                addMovieToWatchlist,\n                removeMovieFromWatchlist,\n                addMovieToWatched,\n                moveToWatchlist,\n                removeFromWatched,\n            }}\n        >\n            {props.children}\n        </GlobalContext.Provider>\n    );\n};","import React, { useContext } from 'react'\nimport { GlobalContext } from \"../context/GlobalState\"\n\nexport const MovieControls = ({ movie, type }) => {\n\n    // the actions are all here, given as context\n    const {\n        removeMovieFromWatchlist,\n        addMovieToWatched,\n        moveToWatchlist,\n        removeFromWatched,\n    }\n        = useContext(GlobalContext);\n\n    return (\n        <div className=\"inner-card-controls\">\n            {type === 'watchlist' && (\n                <>\n                    <button className=\"ctrl-btn\" onClick={() => addMovieToWatched(movie)}>\n                        <i class=\"fas fa-heart\">\n                        </i>\n                    </button>\n\n                    <button className=\"ctrl-btn\"\n                        onClick={() => removeMovieFromWatchlist(movie.id)}\n                    >\n                        <i className=\"fa-fw fa fa-times\">\n                        </i>\n                    </button>\n                </>\n            )}\n            {type === 'watched' &&\n                (\n                    <>\n                        <button className=\"ctrl-btn\" onClick={() => moveToWatchlist(movie)}>\n                            <i class=\"fas fa-heart-broken\"></i>\n                        </button>\n\n                        <button className=\"ctrl-btn\" onClick={() => removeFromWatched(movie.id)}>\n                            <i className=\"fa-fw fa fa-times\">\n                            </i>\n                        </button>\n\n                    </>\n\n                )\n            }\n        </div>\n    )\n}\n","import React from 'react'\nimport { MovieControls } from './MovieControls';\n\n// MovieCards are Used for the Watched and WatchList pages\n// MovieCard implement MovieControls for additional card functionality\nexport const MovieCard = ({ movie, type }) => {\n    return (\n        <div className=\"movie-card\">\n            <div className=\"overlay\"></div>\n            {movie.poster_path ? (\n                <img\n                    src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n                    alt={`${movie.title} Poster`}\n                />\n            ) : (\n                    <div className=\"filler-poster\"> </div>\n                )}\n\n            <MovieControls type={type} movie={movie} />\n        </div>\n    )\n}\n\n\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { MovieCard } from \"./MovieCard\";\n\nexport const WatchList = () => {\n  const { watchlist } = useContext(GlobalContext);\n\n  return (\n    <div className=\"movie-page\">\n      <div className=\"container\">\n        <div className=\"header\">\n          <h1 className=\"heading\">My Watchlist</h1>\n        </div>\n\n        {watchlist.length > 0 ? (\n          <div className=\"movie-grid\">\n            {watchlist.map((movie) => (\n              <MovieCard movie={movie} key={movie.id} type=\"watchlist\" />\n            ))}\n          </div>\n        ) : (\n            <h2 className=\"no-movies\">No movies in your list! Add some!</h2>\n          )}\n      </div>\n    </div>\n  );\n};","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState';\nimport { MovieCard } from './MovieCard'\n\nexport const Watched = () => {\n    const { watched } = useContext(GlobalContext);\n\n    return (\n        <div>\n            <div className=\"movie-page\">\n                <div className=\"container\">\n                    <div className=\"header\">\n                        <h1 className=\"heading\">Favorite Movies</h1>\n\n                    </div>\n\n                    {watched.length > 0 ? (\n                        <div className=\"movie-grid\">\n                            {watched.map((movie) => (\n                                <MovieCard movie={movie} key={movie.id} type=\"watched\" />\n                            ))}\n                        </div>\n                    ) : (\n                            <h2 className=\"no-movies\">No Watched Yet!</h2>\n                        )}\n\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport Moment from \"react-moment\";\n\nexport const ResultCard = ({ movie }) => {\n    const {\n        addMovieToWatchlist,\n        addMovieToWatched,\n        watchlist,\n        watched,\n    } = useContext(GlobalContext);\n\n    let storedMovie = watchlist.find((o) => o.id === movie.id);\n    let storedMovieWatched = watched.find((o) => o.id === movie.id);\n\n    const watchlistDisabled = storedMovie\n        ? true\n        : storedMovieWatched\n            ? true\n            : false;\n\n    const watchedDisabled = storedMovieWatched ? true : false;\n\n    return (\n        <div className=\"result-card\">\n            <div className=\"poster-wrapper\">\n                {movie.poster_path ? (\n                    <img\n                        src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n                        alt={`${movie.title} Poster`}\n                    />\n                ) : (\n                        <div className=\"filler-poster\" />\n                    )}\n            </div>\n\n            <div className=\"info\">\n                <div className=\"header\">\n                    <h3 className=\"title\">{movie.title}</h3>\n                </div>\n\n                <h4 className=\"release-date\">\n                    <Moment format=\"YYYY\">{movie.release_date}</Moment>\n                </h4>\n\n                <div className=\"overview\">\n                    <p>{movie.overview}</p>\n                </div>\n\n                <div className=\"controls\">\n                    <button\n                        className=\"btn\"\n                        disabled={watchlistDisabled}\n                        onClick={() => addMovieToWatchlist(movie)}\n                    >\n                        Add to Watchlist\n          </button>\n\n                    <button\n                        className=\"btn\"\n                        disabled={watchedDisabled}\n                        onClick={() => addMovieToWatched(movie)}\n                    >\n                        Add to Watched\n          </button>\n                </div>\n            </div>\n        </div>\n    );\n};","import React, { useState } from \"react\";\nimport { ResultCard } from \"./ResultCard\";\n\nexport const Home = () => {\n    const [query, setQuery] = useState(\"\");\n    const [results, setResults] = useState([]);\n\n    const onChange = (e) => {\n        e.preventDefault();\n        setQuery(e.target.value);\n\n        fetch(\n            `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1&include_adult=false&query=${e.target.value}`\n        )\n            .then((res) => res.json())\n            .then((data) => {\n                if (!data.errors) {\n                    setResults(data.results);\n                } else {\n                    setResults([]);\n                }\n            });\n    };\n\n    return (\n        <div className=\"add-page\">\n            <div className=\"header\">\n                <img className=\"home-image\" src=\"Screen Shot 2020-12-20 at 6.39.49 PM.png\" alt=\"movies-icon\" />\n                <h1 className=\"heading\">Search for a Movie!</h1>\n            </div>\n\n            <div className=\"container\">\n                <div className=\"add-content\">\n                    <div className=\"input-wrapper\">\n                        <input\n                            type=\"text\"\n                            value={query}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    {results.length > 0 && (\n                        <ul className=\"results\">\n                            {results.map((movie) => (\n                                <li key={movie.id}>\n                                    <ResultCard movie={movie} />\n                                </li>\n                            ))}\n                        </ul>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { WatchList } from \"./components/WatchList\";\nimport { Watched } from \"./components/Watched\";\nimport { Home } from \"./components/Home\"\nimport './App.css';\nimport './lib/font-awesome/css/all.min.css'\n\nimport { GlobalProvider } from './context/GlobalState';\n\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Router>\n        <Header />\n\n        <Switch>\n          <Route exact path=\"/watch-list\">\n            <WatchList />\n          </Route>\n          <Route exact path=\"/favorites\">\n            <Watched />\n          </Route>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n\n        </Switch>\n      </Router>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}